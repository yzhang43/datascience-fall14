SQL Assignment Submission

=== 1
create VIEW NumberOfMedals as
select countries.name as country_name, count(medal) as number_of_medals
from countries, results, players
where players.player_id = results.player_id and countries.country_id = players.country_id
group by countries.name;
**************** RESULT ***************************************************************
               country_name               | number_of_medals 
------------------------------------------+------------------
 Costa Rica                               |                2
 Latvia                                   |                2
 Estonia                                  |                2
 Eritrea                                  |                1
 Turkey                                   |                1
 Germany                                  |               30
 France                                   |               12
 Algeria                                  |                4
 Slovenia                                 |                1
 Japan                                    |               21
 Jamaica                                  |               29
 Spain                                    |                4
 Ukraine                                  |               13
 Belarus                                  |                8
 Cameroon                                 |                1
 Zimbabwe                                 |                3
 Saudi Arabia                             |                1
 Ireland                                  |                1
 Denmark                                  |                3
 Russia                                   |               45
 Lithuania                                |                3
 Iceland                                  |                1
 Portugal                                 |                3
 Netherlands                              |               27
 Barbados                                 |                1
 Nigeria                                  |               13
 Romania                                  |               13
 The Bahamas                              |                7
 Dominican Republic                       |                1
 Trinidad and Tobago                      |                3
 Canada                                   |                1
 Austria                                  |                3
 China                                    |                8
 Kenya                                    |               14
 South Africa                             |               13
 Australia                                |               76
 United States                            |              171
 Poland                                   |                9
 Slovakia                                 |                2
 Argentina                                |                1
 United Kingdom                           |               15
 Kazakhstan                               |                2
 Croatia                                  |                1
 Czech Republic                           |                4
 Cuba                                     |               14
 Italy                                    |               16
 Sweden                                   |               11
 Ethiopia                                 |               15
 Greece                                   |                9
 Brazil                                   |                9
 Morocco                                  |                7
 Hungary                                  |                4
 Mozambique                               |                1
 Mexico                                   |                3
 Finland                                  |                1
 Sri Lanka                                |                1
 Norway                                   |                3
 Bulgaria                                 |                1

=============================================================================================

=== 2
select R.A,R.B,R.C,S.D from R join S on exists(select R.C intersect select S.C);

select R.A as A,R.B as B,R.C as C,S.D as D from R inner join S on R.C = S.C 
union 
select R.A,R.B,Null as C,Null as D from R join S on exists(select R.C intersect select S.C) and R.C is null 
union 
select Null as A,Null as B,S.C as C,S.D as D from R join S on exists(select R.C intersect select S.C) and S.C is null;

**************** RESULT ***************************************************************
     a      | b  | c  |     d      
------------+----+----+------------
 a3         | 30 | 30 | d1        
 a4         |  0 |    | d2     


     a      | b  | c  |     d      
------------+----+----+------------
 a3         | 30 | 30 | d1        
            |    |    | d2        
 a4         |  0 |    | 
=============================================================================================

=== 3
create or replace function update_teammedal() returns trigger as $$
	begin
		update TeamMedals Set medal = medal+1
		from (select events.event_id,players.country_id from TeamMedals, events,players where players.player_id=new.player_id and 	 				     TeamMedals.country_id=players.country_id and events.event_id=TeamMedals.event_id and events.is_team_event = 1 and events.event_id = new.event_id) i 
		 where TeamMedals.event_id = i.event_id and TeamMedals.country_id = i.country_id; 
		return NULL;
	end;
$$language plpgsql;

create Trigger TeamUpdate
olympics-# after insert on results
olympics-# for each row execute procedure update_teammedal();

**************** RESULT ***************************************************************
We do
insert into results values('E89','EGBELAAR01','Gold',38.07);
Before the insertion(part of TeamMedals table that are related):
 USA        | E89      |     4 |  38.08
 GBR        | E89      |     4 |  38.07
 NGR        | E89      |     4 |  38.23
After the insertion:
 USA        | E89      |     4 |  38.08
 GBR        | E89      |     4 |  38.07
 NGR        | E89      |     5 |  38.23
=============================================================================================

=== 4
create or replace function xml_create() returns text as
$$
declare
strresult text;
row integer;
event_name text;
player_name text;
cur1 cursor for select rtrim(events.name) as ename,rtrim(players.name) as pname from events,players,results where players.player_id = results.player_id and events.event_id=results.event_id and results.medal='GOLD' and events.olympic_id ='ATH2004' order by events.name;

cur2 cursor for select count(players.name) from events,players,results where players.player_id = results.player_id and events.event_id=results.event_id and results.medal='GOLD' and events.olympic_id ='ATH2004' group by events.name order by events.name;
begin
	strresult :='';
        open cur1;
	open cur2;q
	loop 	
	fetch cur2 into row;
	fetch cur1 into event_name, player_name;
	row := row-1;
        strresult :=concat(strresult,'<medal>');
        strresult :=concat(strresult,E'\n');
	strresult :=concat(strresult,'	<event>');
	strresult :=concat(strresult,event_name);
	strresult :=concat(strresult,'</event>');
        strresult :=concat(strresult,E'\n');
	if row>0 then
		  strresult :=concat(strresult, '	<players>');
                  strresult :=concat(strresult,E'\n');
		  strresult :=concat(strresult, '		<player>');
		  strresult :=concat(strresult, player_name);
		  strresult :=concat(strresult, '</player>');
                  strresult :=concat(strresult,E'\n');
		  Loop
		  exit when row	= 0;
                  fetch cur1 into event_name, player_name;
		  strresult :=concat(strresult, '		<player>');
		  strresult :=concat(strresult, player_name);
		  strresult :=concat(strresult, '</player>');
                  strresult :=concat(strresult,E'\n');
		  row :=row-1;
		  end loop;
		  strresult :=concat(strresult,'	</players>');
                  strresult :=concat(strresult,E'\n');
           else
		strresult :=concat(strresult, '	<player>');
		strresult :=concat(strresult, player_name);
		strresult :=concat(strresult, '</player>');
                strresult :=concat(strresult,E'\n');
	end if;
	exit when row is null;
        strresult :=concat(strresult,'</medal>');
        strresult :=concat(strresult,E'\n');
	end loop;
        close cur1;
	close cur2;
        raise notice '%  ', strresult;	
	return strresult;
end;
$$
language 'plpgsql';
**************** RESULT ***************************************************************
<INSERT YOUR RESULT HERE>
=============================================================================================

